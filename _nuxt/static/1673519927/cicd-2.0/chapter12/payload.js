__NUXT_JSONP__("/cicd-2.0/chapter12", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U){return {data:[{document:{slug:"chapter12",description:H,title:H,position:108,category:"持續交付2.0：實務導向的DevOps",menuTitle:"Chapter 12",contributors:["hdsbook"],toc:[{id:y,depth:r,text:y},{id:I,depth:r,text:J},{id:z,depth:m,text:z},{id:K,depth:m,text:L},{id:M,depth:r,text:N},{id:t,depth:m,text:t},{id:A,depth:m,text:A},{id:B,depth:m,text:B},{id:C,depth:m,text:C},{id:u,depth:m,text:u},{id:O,depth:r,text:P},{id:D,depth:m,text:D},{id:E,depth:m,text:E},{id:F,depth:m,text:F},{id:v,depth:m,text:v},{id:w,depth:m,text:w},{id:x,depth:m,text:x},{id:Q,depth:r,text:R},{id:G,depth:m,text:G},{id:S,depth:r,text:T}],body:{type:"root",children:[{type:b,tag:s,props:{id:y},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E5%89%8D%E8%A8%80",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-1-快速驗證環的部署與執行.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-1-%E5%BF%AB%E9%80%9F%E9%A9%97%E8%AD%89%E7%92%B0%E7%9A%84%E9%83%A8%E7%BD%B2%E8%88%87%E5%9F%B7%E8%A1%8C.png"},children:[]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"前幾章主要討論快速驗證環中「建置階段」的工作"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"本章主要討論如何「高頻」「低風險」地進行軟體部署和發佈，儘早讓軟體在生產環境中執行\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"「高頻」的好處與可能帶來的成本與風險"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"「降低風險」的各種方式：藍綠部署、開關技術…"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:s,props:{id:I},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#121-%E9%AB%98%E9%A0%BB%E7%99%BC%E4%BD%88%E6%98%AF%E4%B8%80%E7%A8%AE%E8%B6%A8%E5%8B%A2",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"2007年以前，「敏捷軟體開發」的認同度不高，一些傳統IT企業表示：「我們不需要那麼快速地交咐軟體」"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"2009，Flickr 的 John Allspaw 和 Paul Hammond 在 Velocity 2009 年的大會上分享了題目為《Flickr 每天部署10次以上：開發與維運的高效率合作》"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"2011年5月，亞馬遜公司的月度統計顯示，平均每11就觸發一次軟體部署操作，當月最高部署頻率達到每小時1079次之多。平均1萬台伺服器會同時收到部署請求，而最高一次是3萬台伺服器同時執行一個部署操作"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"2017年，Facebook每天對其網站推送多次部署。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-1-Etsy實施持續部署前後的對比.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-1-Etsy%E5%AF%A6%E6%96%BD%E6%8C%81%E7%BA%8C%E9%83%A8%E7%BD%B2%E5%89%8D%E5%BE%8C%E7%9A%84%E5%B0%8D%E6%AF%94.png"},children:[]}]},{type:a,value:c},{type:b,tag:n,props:{id:z},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E9%AB%98%E9%A0%BB%E7%99%BC%E4%BD%88%E7%9A%84%E5%A5%BD%E8%99%95",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"有更多機會與真實用戶互動，快速決定或調整自己產品前進的方向"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"每次變更規模較小，降低部署風險"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"單次部署成本降低"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"出現問題易定位、易修復、能快速修正"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:K},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E4%BB%8D%E4%BD%BF%E7%94%A8%E4%BD%8E%E9%A0%BB%E7%99%BC%E4%BD%88%E6%A8%A1%E5%BC%8F%E5%BC%B7%E8%A1%8C%E5%9F%B7%E8%A1%8C%E9%AB%98%E9%A0%BB%E7%99%BC%E4%BD%88%E7%9A%84%E8%A9%B1%E6%9C%83%E5%B8%B6%E4%BE%86%E8%BC%83%E9%AB%98%E7%9A%84%E8%BF%AD%E4%BB%A3%E6%88%90%E6%9C%AC",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"設某團隊以手動模式每個月發佈一次，現改為每週發佈一次"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"假設「仍舊採用原有手動模式部署」，那每個月的工作量就是原來的四倍"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:s,props:{id:M},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#122-%E9%99%8D%E4%BD%8E%E7%99%BC%E4%BD%88%E9%A2%A8%E9%9A%AA%E7%9A%84%E6%96%B9%E6%B3%95",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:N}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"高頻帶來好處的同時，也存在各種風險(ex: 工作量提高、錯誤處理…)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:t},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E8%97%8D%E7%B6%A0%E9%83%A8%E7%BD%B2",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"💡 準備兩套完全一致的執行環境，交互作為生產環境與預生產環境，目的為減少釋出過程中服務停止的時間"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"準備兩套完全一致的執行環境\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"一套環境 For 正式生產環境"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"另一套 For 新版本的預生產環境"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"對新版本環境進行驗收測試，直至確認無問題"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"將存取流量引流到新版本所在的環境，作為正式生產環境，同時保持舊版本所在環境不變"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"直至確定新版本沒有問題後，再將舊版本所執行的環境作為下一個新版本的預生產環境，部署未來的新版本"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-6-藍綠部署.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-6-%E8%97%8D%E7%B6%A0%E9%83%A8%E7%BD%B2.png"},children:[]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"很多藍綠部署方案會使用相同的資料庫服務(因為資料庫複製的成本較高)\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"同一個資料庫儲存格式需對新舊兩個軟體版本做相容性處理"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"當切換發生在用戶的一次業務操作過程中且涉及事務處理時，如何處理資料的一致性問題\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"切換發生時尚未返回結果的舊有請求，舊版本環境允許其存取完成"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"之後不再接收新的請求即可"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-7-使用相同資料儲存節點的藍綠部署.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-7-%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%90%8C%E8%B3%87%E6%96%99%E5%84%B2%E5%AD%98%E7%AF%80%E9%BB%9E%E7%9A%84%E8%97%8D%E7%B6%A0%E9%83%A8%E7%BD%B2.png"},children:[]}]},{type:a,value:c},{type:b,tag:n,props:{id:A},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E6%BB%BE%E5%8B%95%E9%83%A8%E7%BD%B2",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-8-滾動部署.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-8-%E6%BB%BE%E5%8B%95%E9%83%A8%E7%BD%B2.png"},children:[]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"從服務群集中選擇一個或多個服務單元，停止服務後執行版本更新"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"相較於藍綠部署，不需要準備兩套一模一樣的服務執行環境，伺服器成本相當於少了一半"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"當新版本出現問題時，這種方式無法像藍綠部署那樣透過前面的流量負載平衡器切回舊環境\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"要對其中已部署新版本的伺服器進行還原"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"或快速修正後發部第三個版本V3，此時服器群集中可能會同時有V1~V3三個版本存在"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:B},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E9%87%91%E7%B5%B2%E9%9B%80%E5%8D%80%E4%BD%88",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"💡 讓一小部份用戶先行使用新版本，以便提前發現軟體存在的問題"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"17世紀，礦工帶一隻金絲雀下井。若井下存在有害氣體，在人體還沒察覺到前，金絲雀就會因無法抵抗瓦斯氣體而死亡"}]},{type:a,value:c},{type:b,tag:n,props:{id:C},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E7%81%B0%E5%BA%A6%E7%99%BC%E4%BD%88",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"💡 將發佈分成不同的階段，每個階段的用戶數量逐級增加"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-9-金絲雀發佈與灰度發佈示意圖.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-9-%E9%87%91%E7%B5%B2%E9%9B%80%E7%99%BC%E4%BD%88%E8%88%87%E7%81%B0%E5%BA%A6%E7%99%BC%E4%BD%88%E7%A4%BA%E6%84%8F%E5%9C%96.png"},children:[]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"2012 Facebook 發佈一次首頁大改版\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"用戶數達總用戶的1%，網站的瀏覽量、頁面打開率等都有所下降"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"用戶超過10%後，各項關鍵業務仍舊表現不佳"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"於是Facebook 最終放棄這次首頁大改版，恢復了原有的版本"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"兩種實作方式\n"},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"開關隔離方式：設置開關針對不同步圍的用戶開放新功能"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"滾動部署：將軟體的新版本部署到生產環境中的一部分節點上"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:u},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E6%9A%97%E9%83%A8%E7%BD%B2",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"為演算法設一個開關\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"當開關打開時，會有流量進入此演算法，但用戶並不知道他用的是舊演算法還是新演算法"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"若此演算法的性能不夠好，可以馬上關閉這個開關"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"流量克隆\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"對每個請求都克隆一份，發送給新演算法"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"但新演算法並不向用戶回饋結果，而是開發人員自己收集資料"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:s,props:{id:O},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#123-%E9%AB%98%E9%A0%BB%E7%99%BC%E4%BD%88%E6%94%AF%E6%92%90%E6%8A%80%E8%A1%93",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"第8章提到，當一個軟體團隊的發佈頻率高於一週一次時，採「主線開發，主線發佈」更為經濟"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"但當某個功能無法在兩次發佈之間完成開發，怎麼辦？"}]},{type:a,value:c},{type:b,tag:n,props:{id:D},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E6%8B%86%E5%88%86%E5%8A%9F%E8%83%BD",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"分解為更小的在一個開發週期內能夠完成的功能集"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:E},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E5%85%88%E5%BE%8C%E5%86%8D%E5%89%8D",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"先實作伺服端功能，再實作用戶介面"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-14-先後端再前端.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-14-%E5%85%88%E5%BE%8C%E7%AB%AF%E5%86%8D%E5%89%8D%E7%AB%AF.png"},children:[]}]},{type:a,value:c},{type:b,tag:n,props:{id:F},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E5%8A%9F%E8%83%BD%E9%96%8B%E9%97%9C%E6%8A%80%E8%A1%93",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"透過開關來隱藏未開發完成的功能"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"開關提供兩種用途\n"},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"隔離：將未完成功能的程式隔離在執行路徑之外"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"快速止血：一但生產環境出了問題，直接找到對應功能的開關將其關閉"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"需考慮系統中所有開關的數量和組合測試的問題\n"},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"開關越多，維護成本越高"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"開關存在時間越長，維護成本越高"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"應盡可能少用開關技術\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"if else 語句會帶來程式的複雜性，造成程式碼設計混亂"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"模組職責不清時，更容易出錯"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"但如果在「分支」和「開關」間選擇，盡可能選擇開關技術\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"建立分支會帶來後期的分支合入及多次測試成本"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"應對開關設置項目進行統一管理"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"定期檢查和清理不必要的開關項目"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"常見工具\n"},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"C\u002FC++: gflag，Google公司貢獻的開源工具"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Java社群可用：Togglz or Flip"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Grails: grails-feature-toggle"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:".Net: FeatureToggle"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:v},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E8%B3%87%E6%96%99%E7%A7%BB%E8%BD%89%E6%8A%80%E8%A1%93",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"因為資料庫更新可能需要較長的時間，停機更新的方式可能不合適，所以處理資料庫的版更時可以選擇："}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"小幅改動的話：\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"只增不刪：欄位盡可能只增不刪"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"大幅資料結構的改變，則資料移轉SOP如下\n"},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"為資料庫結構增加一個新版本"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"修改應用程式，同時向兩個版本的結構中寫入資料"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"編寫腳本程式，以後台服務的方式將原來的歷史資料，回填到新版本的結構中"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"修改應用程式，從新舊兩個版本中讀取資料，並進行比較，確保一致"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"當確認無誤後，修改應用程式，只向新版本結構寫入資料，可以將原來的舊版本資料保留一段時間，以防止未預期的問題出現"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:w},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E6%8A%BD%E8%B1%A1%E5%88%86%E6%94%AF%E6%96%B9%E6%B3%95",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"大型架構變動會需要較長的時間，傳統做法如下圖，以真實分支，大規摹覆寫的方式進行架構調整"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-16-透過真實分支重構發佈.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-16-%E9%80%8F%E9%81%8E%E7%9C%9F%E5%AF%A6%E5%88%86%E6%94%AF%E9%87%8D%E6%A7%8B%E7%99%BC%E4%BD%88.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"這種方式在調整後第一次發佈時出現問題的概率較大，需要一定的品質打磨週期"}]},{type:a,value:c},{type:b,tag:q,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"💡 「抽象分支方法」是在不建立真實分支的情況下，透過設計手段，將大的重構專案分解成很多個小的程式碼變更步驟，逐步完成大的程式碼架構調整。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-17-抽象分支方法進行技術改造.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-17-%E6%8A%BD%E8%B1%A1%E5%88%86%E6%94%AF%E6%96%B9%E6%B3%95%E9%80%B2%E8%A1%8C%E6%8A%80%E8%A1%93%E6%94%B9%E9%80%A0.png"},children:[]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"好處：\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"重構的同時也能交付業務功能需求"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"可以逐步驗證架構調整的方向和正確性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果遇到緊急的情況，很容易暫停，且不浪費之前的工作量"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"能強化團隊的合作性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"可以使軟體架構更模組化，變得更容易維護"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"成本\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"整個修改的時間週期可能會拉長"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"整體工作量比一次性完成的情況要大"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"案例\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"iBatis 和 Hibernate 是兩種物件關係映射框架 (Object Relational Mapping，ORM)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"GoCD團隊曾使用抽象分支方法成功將IBatis 替換成Hibernate，並有兩個對外發佈的版本同時包含了這兩個ORM框架"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在使用抽象分支方法前，也曾嘗試使用從主線上建立分支進行框架替換，但失敗了\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"團隊大多數人在主維上開發功能，分支上做框架替換，每天將主線程式碼同步到分支上"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"原預計三週可以完成的任務，六週也沒有能夠完成"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:"em",props:{},children:[{type:b,tag:"strong",props:{},children:[{type:a,value:"如果使用建立分支的方式，通常必須停止大部分的新功能開發，否則很難成功"}]}]}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{id:x},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E5%8D%87%E7%B4%9A%E6%9B%BF%E4%BB%A3%E9%82%84%E5%8E%9F",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"我們總會遇到部署或發佈後出現一些問題，需要馬上修復"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"此時若有使用開關技術，便重新設置一下開關即可"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"但若沒有使用開關技術，怎麼辦呢？ ⇒ 升級替代還原"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:"h4",props:{id:"facebook的處理方法"},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#facebook%E7%9A%84%E8%99%95%E7%90%86%E6%96%B9%E6%B3%95",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:"Facebook的處理方法："}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"盡可能以程式碼升級方式替代binary還原\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"典型的還原操作：將與待修復的問題相關的某次提交，以及與之相關的任何提交一同從程式碼倉庫中直接剔除，然後再次提交，等待下一次發佈即可"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Facebook之所以可以以升級方式替代還原，得益於：\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"其工程師的程式碼提交遵循「小步、獨立、頻繁」的原則"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"發佈頻率高"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Facebook工程師平均每天提交程式碼0.75次，平均每人每天提交約100行程式碼的修改"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:s,props:{id:Q},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#124-%E5%BD%B1%E9%9F%BF%E7%99%BC%E4%BD%88%E9%A0%BB%E7%8E%87%E7%9A%84%E5%9B%A0%E7%B4%A0",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"高頻發佈並非適合所有類型的軟體\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"需隨硬體發佈的嵌入式軟體開發來說，其對外發佈的成本非常高"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"一但軟體出現問題而導致退貨率上升，其損失可能相當高"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"決定軟體的發佈頻率時，需綜合考慮以下影響因素\n"},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"增量發佈帶來的獲益和可行性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"每次發佈或部署的操作執行成本有多高"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"出現問題的概率與由這些問題帶來的成本有多少"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"維護同一軟體的眾多不同版本帶來的成本"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"高頻發佈模式對工程師的技能要求"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"支撐這種高頻發佈所需要的基礎工具設施與流程完善性"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"組織對這種高頻發佈的態度與文化取向"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"其中 5、6、7對前面四項的結果會產生直接影響"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"可能會因這三項原因使高頻發佈的成本高居不下，獲益相對較少"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"此時企業領導就需做出更多努力，在後面三項上投入更多的精力"}]},{type:a,value:c},{type:b,tag:n,props:{id:G},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#%E6%8E%A8%E9%81%B2%E7%99%BC%E4%BD%88%E5%8B%95%E6%A9%9F%E7%9A%84%E6%BC%B8%E9%80%B2%E5%A3%9E%E5%BC%B7%E7%92%B0",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:o,props:{alt:"12-19-推遲發佈動機的漸進增強環.png",src:"\u002Fcode-study\u002Fimages\u002Fcicd-2.0\u002F12\u002F12-19-%E6%8E%A8%E9%81%B2%E7%99%BC%E4%BD%88%E5%8B%95%E6%A9%9F%E7%9A%84%E6%BC%B8%E9%80%B2%E5%A2%9E%E5%BC%B7%E7%92%B0.png"},children:[]}]},{type:a,value:c},{type:b,tag:p,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"大家習慣推遲風險"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"兩次發佈之間的間隔越長"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"累積的程式碼變更越多"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"所需品質驗證時間就越長，部署成本、發佈風險就越高"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:s,props:{id:S},children:[{type:b,tag:g,props:{ariaHidden:h,href:"#125-%E5%B0%8F%E7%B5%90",tabIndex:i},children:[{type:b,tag:j,props:{className:[k,l]},children:[]}]},{type:a,value:T}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"本章討論了"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如何在快速部署發佈的情況下，透過多種技術手段降底風險\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"資料庫遷移技術"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"各種部署策略\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"金絲雀(灰度)發佈"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"抽象分支部署"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:u}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"應對高頻部署的其它技巧\n"},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"拆分功能、先後再前"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"開關技術"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:v}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:w}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:x}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"在某些業務場景下，我們的確無法直接高頻地對外發佈軟體"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"但我們若能使用本章介紹的方法持續向預生產環境進行發佈與部署，就可以儘早獲得軟體的相關品質回饋，進而減少正式發佈後的風險。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"如果我們能將每次發佈的平均成本降低到足夠低，那麼將會直接改變團隊的產品研發流程"}]},{type:a,value:c}]}]},dir:"\u002Fzh\u002Fcicd-2.0",path:"\u002Fzh\u002Fcicd-2.0\u002Fchapter12",extension:".md",createdAt:U,updatedAt:U,readingStats:{text:"18 min read",minutes:17.265,time:1035900,words:3453},to:"\u002Fcicd-2.0\u002Fchapter12"},prev:{title:"Chapter 11 軟件配置管理",path:"\u002Fzh\u002Fcicd-2.0\u002Fchapter11",to:"\u002Fcicd-2.0\u002Fchapter11"},next:{title:"Chapter 13 監測與決策",path:"\u002Fzh\u002Fcicd-2.0\u002Fchapter13",to:"\u002Fcicd-2.0\u002Fchapter13"}}],fetch:{},mutations:[]}}("text","element","\n","li","ul","p","a","true",-1,"span","icon","icon-link",3,"h3","img","ol","blockquote",2,"h2","藍綠部署","暗部署","資料移轉技術","抽象分支方法","升級替代還原","前言","高頻發佈的好處","滾動部署","金絲雀區佈","灰度發佈","拆分功能","先後再前","功能開關技術","推遲發佈動機的漸進壞強環","Chapter 12 低風險發佈","121-高頻發佈是一種趨勢","12.1 高頻發佈是一種趨勢","仍使用低頻發佈模式強行執行高頻發佈的話會帶來較高的迭代成本","仍使用低頻發佈模式，強行執行高頻發佈的話，會帶來較高的迭代成本","122-降低發佈風險的方法","12.2 降低發佈風險的方法","123-高頻發佈支撐技術","12.3 高頻發佈支撐技術","124-影響發佈頻率的因素","12.4 影響發佈頻率的因素","125-小結","12.5 小結","2023-01-12T10:37:47.500Z")));